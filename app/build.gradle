plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("com.google.gms.google-services")
    id 'com.google.secrets_gradle_plugin' version '0.4'
}

android {
    namespace 'com.example.notifbus'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.notifbus"
        minSdk 29
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "IP_KEY", "\"${getSecretKey("IP_KEY")}\"")
        buildConfigField("String", "USER_KEY", "\"${getSecretKey("USER_KEY")}\"")
        buildConfigField("String", "DB_KEY", "\"${getSecretKey("DB_KEY")}\"")
        buildConfigField("String", "PAS_KEY", "\"${getSecretKey("PAS_KEY")}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.13.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.7"

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'

    implementation 'com.jakewharton.timber:timber:4.6.0'

    //Server Sql
    implementation 'net.sourceforge.jtds:jtds:1.3.1'

    //Lottie
    implementation 'com.airbnb.android:lottie:3.7.0'

    //send email
//    implementation 'com.sun.mail:android-mail:1.6.7'
//    implementation 'com.sun.mail:android-activation:1.6.7'

    implementation 'com.github.yuriy-budiyev:code-scanner:2.3.2'

    //firebase
    implementation(platform("com.google.firebase:firebase-bom:33.10.0"))
    implementation 'com.google.firebase:firebase-messaging-ktx:24.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.8'
    implementation 'androidx.navigation:navigation-ui-ktx:2.8.8'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}

def getSecretKey(String key) {
    def props = new Properties()
    def file = rootProject.file("local.properties")
    if (file.exists()) {
        props.load(new FileInputStream(file))
        return props.getProperty(key, "")
    } else {
        return ""
    }
}